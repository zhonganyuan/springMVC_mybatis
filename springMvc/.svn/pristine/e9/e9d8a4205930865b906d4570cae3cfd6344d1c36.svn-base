<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://code.alibabatech.com/schema/dubbo 
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">
		
	<context:component-scan base-package="com.wkb" />
    <bean id="SpringContextHelper" class="com.wkb.core.util.SpringContextHelper" scope="singleton"/>
    
	<!-- 将多个配置文件位置放到列表中 -->
	<bean id="propertyResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<!-- 引入common配置 -->
				<value>classpath:common/debug/config.properties</value>
			</list>
		</constructor-arg>
	</bean>

	<!-- 将配置文件读取到容器中，交给Spring管理 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" ref="propertyResources" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		 <!-- 	
		<property name="url" value="jdbc:mysql://192.168.0.141:3306/wkb_base_dev" />
		<property name="username" value="wkb" />
		<property name="password" value="admin@123" />
	 	
		
		
		<property name="url" value="jdbc:mysql://192.168.0.141:3306/wkb_base_rd" />
		-->
		<property name="url" value="jdbc:mysql://public.wkbins.cn:3306/wkb_online" />
		
		<property name="username" value="wkb" />
		<property name="password" value="admin@123" />
		
		<!-- <property name="url" value="jdbc:mysql://192.168.93.202:3306/wkb_base0713" />
		<property name="username" value="skylr" />
		<property name="password" value="123456" /> 
		-->
	</bean>
	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/mysql/**/*Mapper.xml"></property>
	</bean>

	<!-- 配置SQLSession模板 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.wkb" />
        <property name="markerInterface" value="com.wkb.core.dao.interfaces.BaseMapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean> 
    
    
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="100" />        
        <property name="maxWaitMillis" value="300" />  
        <property name="testOnBorrow" value="true" />  
    </bean> 
        
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
     p:host-name="192.168.93.202" p:port="6379" p:pool-config-ref="poolConfig" p:database="1" p:password=""/>
    
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="connectionFactory">  
        <property name="keySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="valueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
	    <property name="hashKeySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="hashValueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
    </bean>
    
    <bean id="defaultRedisOperate" class="com.wkb.core.redis.DefaultRedisOperate"/>
    
    
    <amq:connectionFactory id="amqConnectionFactory"
        brokerURL="tcp://192.168.0.141:61616" userName="admin" password="admin" />
        
  <bean id="mqconnectionFactory"
        class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="amqConnectionFactory" />
        <property name="sessionCacheSize" value="100" />
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="mqconnectionFactory" />
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false" />
    </bean>
    
    <bean id="activeMqSender" class="com.wkb.mq.activemq.ActiveMqSender">
    	<property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>
    
    <jms:listener-container destination-type="queue" container-type="default" connection-factory="mqconnectionFactory" acknowledge="auto">
        <jms:listener destination="offlineInsurance.queue" ref="offlineInsurance"/>
    </jms:listener-container>
    
    <import resource="classpath:/spring-mongodb.xml"/>
</beans>