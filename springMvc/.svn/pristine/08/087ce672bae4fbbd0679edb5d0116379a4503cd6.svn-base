<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wkb.nginx.dao.MonitorNginxInfoMapper">
  <resultMap id="BaseResultMap" type="com.wkb.nginx.bean.MonitorNginxInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="inner_code" jdbcType="BIGINT" property="innerCode" />
    <result column="active_connection" jdbcType="INTEGER" property="activeConnection" />
    <result column="accepts" jdbcType="INTEGER" property="accepts" />
    <result column=" handled" jdbcType="INTEGER" property="handled" />
    <result column="requests" jdbcType="INTEGER" property="requests" />
    <result column="reading" jdbcType="INTEGER" property="reading" />
    <result column="writing" jdbcType="INTEGER" property="writing" />
    <result column="waiting" jdbcType="INTEGER" property="waiting" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      数据表 monitor_nginx_info 中用于被引用的字段
    -->
    id, inner_code, active_connection, accepts, " handled", requests, reading, writing, 
    waiting, create_time, creator
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      根据主键获取表 monitor_nginx_info 中的信息
    -->
    select 
    <include refid="Base_Column_List" />
    from monitor_nginx_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      根据主键删除表 monitor_nginx_info 中的信息
    -->
    delete from monitor_nginx_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wkb.nginx.bean.MonitorNginxInfo">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      向数据表 monitor_nginx_info 中插入一条数据
    -->
    insert into monitor_nginx_info (id, inner_code, active_connection, 
      accepts, " handled", requests, 
      reading, writing, waiting, 
      create_time, creator)
    values (#{id,jdbcType=INTEGER}, #{innerCode,jdbcType=BIGINT}, #{activeConnection,jdbcType=INTEGER}, 
      #{accepts,jdbcType=INTEGER}, #{handled,jdbcType=INTEGER}, #{requests,jdbcType=INTEGER}, 
      #{reading,jdbcType=INTEGER}, #{writing,jdbcType=INTEGER}, #{waiting,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wkb.nginx.bean.MonitorNginxInfo">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      向数据表 monitor_nginx_info 中有选择的插入一条数据
    -->
    insert into monitor_nginx_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="innerCode != null">
        inner_code,
      </if>
      <if test="activeConnection != null">
        active_connection,
      </if>
      <if test="accepts != null">
        accepts,
      </if>
      <if test="handled != null">
        " handled",
      </if>
      <if test="requests != null">
        requests,
      </if>
      <if test="reading != null">
        reading,
      </if>
      <if test="writing != null">
        writing,
      </if>
      <if test="waiting != null">
        waiting,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="innerCode != null">
        #{innerCode,jdbcType=BIGINT},
      </if>
      <if test="activeConnection != null">
        #{activeConnection,jdbcType=INTEGER},
      </if>
      <if test="accepts != null">
        #{accepts,jdbcType=INTEGER},
      </if>
      <if test="handled != null">
        #{handled,jdbcType=INTEGER},
      </if>
      <if test="requests != null">
        #{requests,jdbcType=INTEGER},
      </if>
      <if test="reading != null">
        #{reading,jdbcType=INTEGER},
      </if>
      <if test="writing != null">
        #{writing,jdbcType=INTEGER},
      </if>
      <if test="waiting != null">
        #{waiting,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wkb.nginx.bean.MonitorNginxInfo">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      根据主键有选择的更改表 monitor_nginx_info 中的信息
    -->
    update monitor_nginx_info
    <set>
      <if test="innerCode != null">
        inner_code = #{innerCode,jdbcType=BIGINT},
      </if>
      <if test="activeConnection != null">
        active_connection = #{activeConnection,jdbcType=INTEGER},
      </if>
      <if test="accepts != null">
        accepts = #{accepts,jdbcType=INTEGER},
      </if>
      <if test="handled != null">
        " handled" = #{handled,jdbcType=INTEGER},
      </if>
      <if test="requests != null">
        requests = #{requests,jdbcType=INTEGER},
      </if>
      <if test="reading != null">
        reading = #{reading,jdbcType=INTEGER},
      </if>
      <if test="writing != null">
        writing = #{writing,jdbcType=INTEGER},
      </if>
      <if test="waiting != null">
        waiting = #{waiting,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wkb.nginx.bean.MonitorNginxInfo">
    <!--
      本方法由数据表 monitor_nginx_info 生成
      根据主键更改表 monitor_nginx_info 中的信息
    -->
    update monitor_nginx_info
    set inner_code = #{innerCode,jdbcType=BIGINT},
      active_connection = #{activeConnection,jdbcType=INTEGER},
      accepts = #{accepts,jdbcType=INTEGER},
      " handled" = #{handled,jdbcType=INTEGER},
      requests = #{requests,jdbcType=INTEGER},
      reading = #{reading,jdbcType=INTEGER},
      writing = #{writing,jdbcType=INTEGER},
      waiting = #{waiting,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>