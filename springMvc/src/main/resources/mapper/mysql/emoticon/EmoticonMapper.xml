<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wkb.emoticon.dao.EmoticonMapper">
  <resultMap id="BaseResultMap" type="com.wkb.emoticon.bean.Emoticon">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creater_head" jdbcType="VARCHAR" property="createrHead" />
    <result column="browsing_times" jdbcType="INTEGER" property="browsingTimes" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      本方法由数据表 emoticon 生成
      数据表 emoticon 中用于被引用的字段
    -->
    id, category_id, url, create_time, name, creater, status, creater_head, browsing_times, 
    type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      本方法由数据表 emoticon 生成
      根据主键获取表 emoticon 中的信息
    -->
    select 
    <include refid="Base_Column_List" />
    from emoticon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      本方法由数据表 emoticon 生成
      根据主键删除表 emoticon 中的信息
    -->
    delete from emoticon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wkb.emoticon.bean.Emoticon">
    <!--
      本方法由数据表 emoticon 生成
      向数据表 emoticon 中插入一条数据
    -->
    insert into emoticon (id, category_id, url, 
      create_time, name, creater, 
      status, creater_head, browsing_times, 
      type)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createrHead,jdbcType=VARCHAR}, #{browsingTimes,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wkb.emoticon.bean.Emoticon">
    <!--
      本方法由数据表 emoticon 生成
      向数据表 emoticon 中有选择的插入一条数据
    -->
    insert into emoticon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createrHead != null">
        creater_head,
      </if>
      <if test="browsingTimes != null">
        browsing_times,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrHead != null">
        #{createrHead,jdbcType=VARCHAR},
      </if>
      <if test="browsingTimes != null">
        #{browsingTimes,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wkb.emoticon.bean.Emoticon">
    <!--
      本方法由数据表 emoticon 生成
      根据主键有选择的更改表 emoticon 中的信息
    -->
    update emoticon
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrHead != null">
        creater_head = #{createrHead,jdbcType=VARCHAR},
      </if>
      <if test="browsingTimes != null">
        browsing_times = #{browsingTimes,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wkb.emoticon.bean.Emoticon">
    <!--
      本方法由数据表 emoticon 生成
      根据主键更改表 emoticon 中的信息
    -->
    update emoticon
    set category_id = #{categoryId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      creater_head = #{createrHead,jdbcType=VARCHAR},
      browsing_times = #{browsingTimes,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>